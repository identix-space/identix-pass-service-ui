query getUserVCs($role: AgentsRoles, $page: Int, $limit: Int, $vcType: String) {
  getUserVCs(role: $role, page: $page, limit: $limit, vcType: $vcType) {
    vcDid
    vcTypeDid
    vcParams
    vcRawText
    issuerDid
    holderDid
    createdAt
    updatedAt
    verificationCases {
        verifierDid
        verificationStatus
    }
  }
}

query checkUserVCs($role: AgentsRoles, $vcType: String) {
  getUserVCs(role: $role, vcType: $vcType) {
    vcDid
  }
}

query getVC($vcDid: String!) {
  getVC(vcDid: $vcDid) {
    vcDid
        vcTypeDid
        vcParams
        vcRawText
        issuerDid
        holderDid
        createdAt
        updatedAt
        verificationCases {
            verifierDid
            verificationStatus
        }
  }
}

query checkAccountExists($did: String!) {
    checkAccountExists(did: $did)
}

query getEventLogEntries($startIndex: Int, $count: Int) {
    getEventLogEntries(startIndex: $startIndex, count: $count) {
        id
        ownerDid
        eventType
        vcDid
        message
        eventDate
    }
}

query getVcTypes {
    getVcTypes {
        vcTypeDid
        vcTypeTag
    }
}

query whoami {
    whoami {
        id
        did
        status
        avatarUrl
        roles
        connections {
            otherData
        }
    }
}

mutation issuerVC($holderDid: String!, $vcTypeDid: String!, $vcParams: String!) {
    issueVC(holderDid: $holderDid, vcTypeDid: $vcTypeDid, vcParams: $vcParams)
}

mutation requestVcVerification($verifierDid: String!, $vcDid: String!) {
    requestVcVerification(verifierDid: $verifierDid, vcDid: $vcDid)
}

mutation verifyVC($verificationData: String!) {
    verifyVC(verificationData: $verificationData)
}

query logout {
    logout
}

mutation deleteAccount {
    deleteAccount
}
