schema {
  query: Query
  mutation: Mutation
}

enum AgentsRoles {
  holder
  issuer
  verifier
}

type EventLogEntry {
  created: String!
  id: Float!
  message: String!
  owner: String!
}

type Mutation {
  issuerVC(holderDid: String!, vcParams: String!, vcTypeDid: String!): Boolean!
  requestVcVerification(vcDid: String!, verifierDid: String!): Boolean!
  verifyVC(vcDid: String!, verificationStatus: String!): Boolean!
}

type Query {
  checkAccountExists(did: String!): Boolean!
  getAllAccounts: [String!]!
  getEventLogEntries(count: Int, startIndex: Int): [EventLogEntry!]!
  getUserVCs(count: Int, role: AgentsRoles, startIndex: Int): [VC!]!
  getVC(vcDid: String!): VC!
  getVcTypes: [VcTypeInfo!]!
  whoami: String!
}

type VC {
  createdAt: String!
  holderDid: String!
  issuerDid: String!
  updatedAt: String!
  vcDid: String!
  vcParams: String!
  vcRawText: String!
  vcTypeDid: String!
  verificationCases: [VerificationCase!]!
}

type VcTypeInfo {
  vcTypeDid: String!
  vcTypeTag: String!
}

type VerificationCase {
  status: VerificationStatuses!
  verifierDid: String!
}

enum VerificationStatuses {
  approved
  pendingApproval
  rejected
}